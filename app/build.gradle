apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        resConfigs "zh"
        multiDexEnabled true
        renderscriptTargetApi 23 //高斯模糊?
        renderscriptSupportModeEnabled true //高斯模糊?


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        jackOptions{
//            enabled true
//        }
        ndk {

        }

    }
    //use legacy for android 6.0 适配 环信的通信
    useLibrary 'org.apache.http.legacy'

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
//            include  'armeabi //'x86', 'armeabi', 'armeabi-v7a', 'mips'
        }
    }
    signingConfigs {
        release {
//            storeFile file(keystore.path)
//            storePassword keystore.password
//            keyAlias keystore.alias
//            keyPassword keystore.alias_password
//            shrinkResources true
        }
        config {
            //加载资源
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
            properties.load(inputStream)

            //读取文件
            def sdkDir = properties.getProperty('keystore.path')
            storeFile file(sdkDir)

            //读取字段
            def key_keyAlias = properties.getProperty('keystore.alias')
            def key_keyPassword = properties.getProperty('keystore.password');
            def key_storePassword = properties.getProperty('keystore.alias_password');

            storePassword key_storePassword
            keyAlias key_keyAlias
            keyPassword key_keyPassword

            //“resConfigs” 属性将会在构建过程中移除所有本地化资源
//            resConfigs "en"
        }
    }
    dexOptions {
        preDexLibraries true
        maxProcessCount 8
    }
    configurations {
        all*.exclude module: 'PhotoView'  //去除重复依赖库
    }
//    compileOptions{
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
    buildTypes {
        release {
            ndk {
                abiFilters = ["armeabi"]
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            //Other parameters
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
            //“shrinkResources” 属性将会移除所有在工程中没有用到的资源
            shrinkResources false

        }
        debug {
            ndk {
                abiFilters = ["armeabi"]
            }
            signingConfig signingConfigs.config
        }
    }
    productFlavors {
    }
}
configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        def requested = details.requested
//        if (requested.group == 'com.android.support') {
//            if (!requested.name.startsWith("multidex")) {
//                details.useVersion '26.+'
//            }
//        }
//    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible

    //base
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["cardview-v7"]
    //ui

    //    compile rootProject.ext.dependencies["material-calendarview"]

    //    compile rootProject.ext.dependencies["materialsearchview"]

    //    compile rootProject.ext.dependencies["multiline-collapsingtoolbar"]
    compile rootProject.ext.dependencies["PhotoView"]
    compile rootProject.ext.dependencies["glide-transformations"]
    compile rootProject.ext.dependencies["html-textview"]
    compile rootProject.ext.dependencies["flowingdrawer"]
    compile rootProject.ext.dependencies["nineoldandroids"]
    compile rootProject.ext.dependencies["swipebacklayout"]
    compile rootProject.ext.dependencies["bottom-navigation"]
    compile rootProject.ext.dependencies["phoenix"]
    compile rootProject.ext.dependencies["statusbarutil"]
    compile rootProject.ext.dependencies["tastytoast"]
    compile rootProject.ext.dependencies["banner"]
    compile rootProject.ext.dependencies["sweetsheet"]
    compile rootProject.ext.dependencies["htextview"]
    compile rootProject.ext.dependencies["htextview-rainbow"]
    compile rootProject.ext.dependencies["recyclerview-adapter"]
    compile rootProject.ext.dependencies["flexbox"]
    compile rootProject.ext.dependencies["circleimageview"]

    //即时通讯 环信
    compile rootProject.ext.dependencies["hyphenate"]

    //    compile rootProject.ext.dependencies["htextview-fall"]

    //    compile rootProject.ext.dependencies["rxgalleryfinal"]

    // anim

    //rx

    //    compile rootProject.ext.dependencies["rxjava"]

    //    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["rxpermissions"]
    //network

    //    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-converter-gson"]
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    //    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["okhttp-logging-interceptor"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-okhttp3-integration"]
    compile rootProject.ext.dependencies["jsoup"]
    //di
    compile rootProject.ext.dependencies["dagger"]
    apt rootProject.ext.dependencies["dagger-compiler"]
    compile rootProject.ext.dependencies["butterknife"]
    apt rootProject.ext.dependencies["butterknife-compiler"]
    provided rootProject.ext.dependencies["annotation"]
    //other
    compile rootProject.ext.dependencies["multidex"]
    compile rootProject.ext.dependencies["logger"]
    compile rootProject.ext.dependencies["fragmentation"]
    compile rootProject.ext.dependencies["crashreport"]
    //canary
    debugCompile rootProject.ext.dependencies["blockcanary-android"]
    releaseCompile rootProject.ext.dependencies["blockcanary-no-op"]
    debugCompile rootProject.ext.dependencies["leakcanary-android"]
    releaseCompile rootProject.ext.dependencies["leakcanary-android-no-op"]
    //    compile 'com.android.support:support-v4:26.+' //我坚信其他库引用了

    // support v4 新增文件的时候 自己会恢复
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'cn.finalteam.rxgalleryfinal:library:1.0.8'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.android.support:support-v4:25.3.1'
    testCompile 'junit:junit:4.12'
}
